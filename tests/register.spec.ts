import { test, expect } from '@playwright/test';
const fs = require('fs');

test('loginPUMA', async ({ page }) => {
    await page.goto('https://mx.puma.com/');
    const loginButton = page.locator('button[id="myAccount"]');
    await expect(loginButton).toBeVisible();
    await loginButton.click();
    const login = page.locator('a[class=" Button-Primary Button-Primary_color_brown Link-Login"]');
    await expect(login).toBeVisible();
    await login.click();
    const inputloginEmail = page.locator('input[id="sign-email"]');
    await expect(inputloginEmail).toBeVisible();
    await inputloginEmail.fill("rijaca3623@kimasoft.com");
    const confirmloginEmail = page.locator('input[id="sign-confirm-email"]');
    await expect(confirmloginEmail).toBeVisible();
    await confirmloginEmail.fill("rijaca3623@kimasoft.com");
    const passwordInput = page.locator('input[id="password"]');
    await expect(passwordInput).toBeVisible();
    await passwordInput.fill("ivanmacias12342!");
    const loginAccess = page.locator('button[class="Button-Primary Button-Primary_withArrow"]');
    await expect(loginAccess).toBeVisible();
    await loginAccess.click();
    const cookies = await page.context().cookies();
    await fs.promises.writeFile('cookies.json', JSON.stringify(cookies));
    await page.pause();
});

//REGISTER
test('register', async ({ page }) => {
    await page.goto('https://mx.puma.com/');
    const loginButton = page.locator('button[id="myAccount"]');
    await expect(loginButton).toBeVisible();
    await loginButton.click();
    const login = page.locator('a[class=" Button-Primary Button-Primary_color_brown Link-Login"]');
    await expect(login).toBeVisible();
    await login.click();
    const name = page.locator('#register-firstname');
    await expect(name).toBeVisible();
    await name.fill("Pedro");
    const lastName = page.locator('#register-lastname');
    await expect(lastName).toBeVisible();
    await lastName.fill("Lopez");
    const email = page.locator('#register-email');
    await expect(email).toBeVisible();
    await email.fill("yanik49520@nausard.com");
    const confirmEmail = page.locator('#register-confirm-email');
    await expect(confirmEmail).toBeVisible();
    await confirmEmail.fill("yanik49520@nausard.com");
    const password = page.locator('#register-password');
    await expect(password).toBeVisible();
    await password.fill("enable1998D45g!");
    const confirmPassword = page.locator('#register-confirm-password');
    await expect(confirmPassword).toBeVisible();
    await confirmPassword.fill("enable1998D45g!");
    const day = page.getByText('DD12345678910111213141516171819202122232425262728293031DD12345678910111213141516');
    await expect(day).toBeVisible();
    await day.click();
    const option = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "21" });
    await option.click();
    const month = page.getByText('MMEneroFebreroMarzoAbrilMayoJunioJulioAgostoSeptiembreOctubreNoviembreDiciembreM');
    await expect(month).toBeVisible();
    await month.click();
    const option2 = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "Marzo" });
    await option2.click();
    const year = page.getByLabel('Select drop-down').first();
    await expect(year).toBeVisible();
    await year.click();
    const option3 = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "2000" });
    await option3.click();
    const createAccount = page.getByRole('button', { name: 'Crear una cuenta' });
    await expect(createAccount).toBeVisible();
    await createAccount.click();
    await page.pause();
});

test('registro-cuenta-existente', async ({ page }) => {
    await page.goto('https://mx.puma.com/');
    const loginButton = page.locator('button[id="myAccount"]');
    await expect(loginButton).toBeVisible();
    await loginButton.click();
    const login = page.locator('a[class=" Button-Primary Button-Primary_color_brown Link-Login"]');
    await expect(login).toBeVisible();
    await login.click();
    const name = page.locator('#register-firstname');
    await expect(name).toBeVisible();
    await name.fill("Pedro");
    const lastName = page.locator('#register-lastname');
    await expect(lastName).toBeVisible();
    await lastName.fill("Lopez");
    const email = page.locator('#register-email');
    await expect(email).toBeVisible();
    await email.fill("rijaca3623@kimasoft.com");
    const confirmEmail = page.locator('#register-confirm-email');
    await expect(confirmEmail).toBeVisible();
    await confirmEmail.fill("rijaca3623@kimasoft.com");
    const password = page.locator('#register-password');
    await expect(password).toBeVisible();
    await password.fill("enable1998D45g!");
    const confirmPassword = page.locator('#register-confirm-password');
    await expect(confirmPassword).toBeVisible();
    await confirmPassword.fill("enable1998D45g!");
    const day = page.getByText('DD12345678910111213141516171819202122232425262728293031DD12345678910111213141516');
    await expect(day).toBeVisible();
    await day.click();
    const option = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "21" });
    await option.click();
    const month = page.getByText('MMEneroFebreroMarzoAbrilMayoJunioJulioAgostoSeptiembreOctubreNoviembreDiciembreM');
    await expect(month).toBeVisible();
    await month.click();
    const option2 = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "Marzo" });
    await option2.click();
    const year = page.getByLabel('Select drop-down').first();
    await expect(year).toBeVisible();
    await year.click();
    const option3 = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "2000" });
    await option3.click();
    const createAccount = page.getByRole('button', { name: 'Crear una cuenta' });
    await expect(createAccount).toBeVisible();
    await createAccount.click();
    await createAccount.click();
    await createAccount.click();
    await createAccount.click();
    await page.pause();
});

test('registro-email-invalido', async ({ page }) => {
    await page.goto('https://mx.puma.com/');
    const loginButton = page.locator('button[id="myAccount"]');
    await expect(loginButton).toBeVisible();
    await loginButton.click();
    const login = page.locator('a[class=" Button-Primary Button-Primary_color_brown Link-Login"]');
    await expect(login).toBeVisible();
    await login.click();
    const name = page.locator('#register-firstname');
    await expect(name).toBeVisible();
    await name.fill("Pedro");
    const lastName = page.locator('#register-lastname');
    await expect(lastName).toBeVisible();
    await lastName.fill("Lopez");
    const email = page.locator('#register-email');
    await expect(email).toBeVisible();
    await email.fill("rijaca3623");
    const confirmEmail = page.locator('#register-confirm-email');
    await expect(confirmEmail).toBeVisible();
    await confirmEmail.fill("rijaca3623");
    const password = page.locator('#register-password');
    await expect(password).toBeVisible();
    await password.fill("enable1998D45g!");
    const confirmPassword = page.locator('#register-confirm-password');
    await expect(confirmPassword).toBeVisible();
    await confirmPassword.fill("enable1998D45g!");
    const day = page.getByText('DD12345678910111213141516171819202122232425262728293031DD12345678910111213141516');
    await expect(day).toBeVisible();
    await day.click();
    const option = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "21" });
    await option.click();
    const month = page.getByText('MMEneroFebreroMarzoAbrilMayoJunioJulioAgostoSeptiembreOctubreNoviembreDiciembreM');
    await expect(month).toBeVisible();
    await month.click();
    const option2 = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "Marzo" });
    await option2.click();
    const year = page.getByLabel('Select drop-down').first();
    await expect(year).toBeVisible();
    await year.click();
    const option3 = await page.locator('ul.FieldSelect-Options_isExpanded li').filter({ hasText: "2000" });
    await option3.click();
    const createAccount = page.getByRole('button', { name: 'Crear una cuenta' });
    await expect(createAccount).toBeVisible();
    await createAccount.click();
    await page.pause();
});

